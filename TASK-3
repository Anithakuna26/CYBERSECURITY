import socket
import requests
import threading


def port_scanner(target, ports=[21, 22, 23, 25, 80, 443, 8080]):
    print(f"\n[üîç] Scanning ports on {target}...")
    for port in ports:
        try:
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(1)
            result = sock.connect_ex((target, port))
            if result == 0:
                print(f"[OPEN] Port {port} is open")
            sock.close()
        except:
            print(f"[!] Couldn't scan port {port}")


def banner_grabber(ip, port):
    try:
        s = socket.socket()
        s.settimeout(2)
        s.connect((ip, port))
        banner = s.recv(1024).decode().strip()
        print(f"[üì°] Banner on port {port}: {banner}")
        s.close()
    except:
        print(f"[x] No banner on port {port}")


def brute_force_login(url, username, wordlist):
    print(f"\n[üîê] Starting brute-force on {url}...")
    try:
        with open(wordlist, "r") as f:
            for line in f:
                password = line.strip()
                data = {"username": username, "password": password}
                response = requests.post(url, data=data)
                if "Login failed" not in response.text:
                    print(f"[‚úîÔ∏è] Found credentials: {username}:{password}")
                    return
                else:
                    print(f"[‚úñÔ∏è] Tried {password}")
    except FileNotFoundError:
        print("[!] Wordlist not found.")


def show_menu():
    print("\nüîß PENETRATION TESTING TOOLKIT üîß")
    print("1. Port Scanner")
    print("2. Banner Grabber")
    print("3. Brute Force Login (basic)")
    print("4. Exit")

if __name__ == "__main__":
    while True:
        show_menu()
        choice = input("\nChoose a tool (1-4): ")

        if choice == "1":
            target = input("Enter target IP/domain: ")
            port_scanner(target)

        elif choice == "2":
            target = input("Enter IP: ")
            port = int(input("Enter port: "))
            banner_grabber(target, port)

        elif choice == "3":
            url = input("Enter login URL: ")
            username = input("Enter username: ")
            wordlist = input("Enter path to wordlist.txt: ")
            brute_force_login(url, username, wordlist)

        elif choice == "4":
            print("Exiting...")
            break

        else:
            print("Invalid option. Try again.")
