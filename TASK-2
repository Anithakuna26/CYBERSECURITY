import requests
from bs4 import BeautifulSoup

sql_payloads = ["' OR '1'='1", '" OR "1"="1', "';--", "' OR 'a'='a"]
xss_payloads = ['<script>alert("XSS")</script>', '" onerror="alert(1)"']

def get_forms(url):
    
    soup = BeautifulSoup(requests.get(url).content, "html.parser")
    return soup.find_all("form")

def form_details(form):
   
    details = {}
    action = form.attrs.get("action")
    method = form.attrs.get("method", "get").lower()
    inputs = []

    for input_tag in form.find_all("input"):
        name = input_tag.attrs.get("name")
        type_ = input_tag.attrs.get("type", "text")
        inputs.append({"name": name, "type": type_})

    details["action"] = action
    details["method"] = method
    details["inputs"] = inputs
    return details

def submit_form(form_details, url, payload):
    target_url = url + form_details["action"] if form_details["action"] else url
    data = {}

    for input in form_details["inputs"]:
        if input["type"] == "text" or input["type"] == "search":
            data[input["name"]] = payload
        else:
            data[input["name"]] = "test"

    if form_details["method"] == "post":
        return requests.post(target_url, data=data)
    else:
        return requests.get(target_url, params=data)

def scan_vulnerabilities(url):
    forms = get_forms(url)
    print(f"\nFound {len(forms)} form(s) on {url}\n")

    for i, form in enumerate(forms, start=1):
        details = form_details(form)
        print(f"Testing form #{i} => {details['action']}")

        for payload in sql_payloads:
            res = submit_form(details, url, payload)
            if "sql" in res.text.lower() or "error" in res.text.lower():
                print(f"ðŸ”´ Possible SQL Injection detected using payload: {payload}")
                break

    
        for payload in xss_payloads:
            res = submit_form(details, url, payload)
            if payload in res.text:
                print(f"ðŸŸ  Possible XSS vulnerability using payload: {payload}")
                break

        print("âœ… Scan completed for this form.\n")

if __name__ == "__main__":
    target = input("Enter the full URL of the web page to scan: ")
    scan_vulnerabilities(target)
